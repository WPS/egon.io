// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@import "@angular/material";
@import "material-icons/iconfont/material-icons.css";
// Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.all-component-typographies();
@include mat.core();

:root {
  --borderGray10: #e8e9ed;
}
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

// This pallette was generated with https://m2.material.io/design/color/the-color-system.html#tools-for-picking-colors,
// using the color of the left part of the Domain Storytelling logo (#A4D7E1) as primary color (nr. 100 in the palette):
$egon-palette: (
  50: #daeff3,
  100: #a4d7e1,
  200: #67bdcd,
  300: #15a3b9,
  400: #0093ac,
  500: #00839f,
  600: #00758f,
  700: #006377,
  800: #005160,
  900: #003139,
  contrast: (
    50: black,
    100: black,
    200: black,
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

// mdc-filled-text-field-focus-label-text-color: rgba(164, 215, 225, 0.87);

// This was generated (see egon-palette, with 100 as primary color)
$egon-contrast-palette: (
  50: #eedddd,
  100: #e1aea4,
  200: #cb796b,
  300: #b64435,
  400: #a90e10,
  500: #9b0000,
  600: #940000,
  700: #8a0000,
  800: #7c0000,
  900: #660000,
  contrast: (
    50: black,
    100: black,
    200: black,
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

// @param base-pallette
// @param primary
// @param lighter
// @param darker
$egon-primary: mat.m2-define-palette($egon-palette, 100, 50, 200);
$egon-accent: mat.m2-define-palette($egon-palette, 400, 300, 500);

// The warn palette is optional (defaults to red).
$egon-warn: mat.m2-define-palette($egon-contrast-palette, 200, 100, 300);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$egon-theme: mat.m2-define-light-theme(
  (
    color: (
      primary: $egon-primary,
      accent: $egon-accent,
      warn: $egon-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($egon-theme);

/* FONTS */

@font-face {
  font-family: Roboto;
  font-style: normal;
  font-weight: bold;
  src: local("Roboto-Regular"), url("~src/assets/font/Roboto-Regular.woff");
}

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", Arial, sans-serif;
}

.smallScrollbar {
  /* Works on Firefox */
  scrollbar-width: thin;

  /* Works on Chrome, Edge, and Safari */
  *::-webkit-scrollbar {
    width: 12px;
  }
}

.headline {
  font-size: 1.1rem;
  cursor: pointer;
}

.headerButton {
  background-color: transparent;
  border: none;
  letter-spacing: 0.05em;
}

.headerButton:hover {
  color: #0093ac;
  cursor: pointer;
}

.spacer {
  flex: 1 1 auto;
}

.mr-1 {
  margin-right: 8px !important;
}

.mr-10 {
  margin-right: 10px !important;
}

.materialIconButton {
  font-size: 24px !important;
  padding-left: 5px;
  padding-right: 5px;
  margin-top: 9px;
}

.dense-8 {
  @include mat.all-component-densities(-8);
}

app-root {
  display: block;
  height: 100%;
}

a {
  color: map-get($egon-accent, 900);
}

/* Material Design */

mat-dialog-actions.mdc-dialog__actions {
  padding: 0 24px 20px 24px;
  justify-content: end;
}

.mat-mdc-snack-bar-container {
  &.snackbar_success {
    --mdc-snackbar-container-color: #a4d7e1;
    --mat-mdc-snack-bar-button-color: black;
    --mdc-snackbar-supporting-text-color: black;
  }
  &.snackbar_error {
    --mdc-snackbar-container-color: #b64435;
    --mat-mdc-snack-bar-button-color: #fff;
    --mdc-snackbar-supporting-text-color: #fff;
  }
  &.snackbar_info {
    --mdc-snackbar-container-color: #f7f7f8;
    --mat-mdc-snack-bar-button-color: black;
    --mat-snack-bar-button-color: black;
    --mdc-snackbar-supporting-text-color: black;
  }
}

/**
 * from diagram-js
 */

/* context pad */

.djs-context-pad {
  min-width: 7.5rem;
  height: auto;
}

.djs-context-pad.open {
  border: solid 1px #b9bcc6;
}

.djs-context-pad.open > .group {
  border: solid 1px #b9bcc6;
  padding: 1px;
  background-color: #f7f7f8;
}

/**
 * palette
 */

.djs-palette {
  position: absolute;
  left: 20px;
  top: 20px;

  box-sizing: border-box;
  width: 32px;
}

.djs-palette .separator {
  margin: 0 2px;
  padding-top: 0;

  border: none;
  border-bottom: solid 1px #b9bcc6;

  clear: both;
}

.djs-palette .entry:before {
  vertical-align: middle;
}

.djs-palette .djs-palette-toggle {
  cursor: pointer;
}

.djs-palette .entry,
.djs-palette .djs-palette-toggle {
  color: #333;
  font-size: 26px;

  text-align: center;
}

.djs-palette .entry {
  float: left;
}

.djs-palette .entry img {
  max-width: 100%;
}

.djs-palette .djs-palette-entries:after {
  content: "";
  display: table;
  clear: both;
}

.djs-palette .djs-palette-toggle:hover {
  background: #666;
}

.djs-palette .entry:hover {
  fill: #a4d7e1;
}

.djs-palette .highlighted-entry {
  color: #a4d7e1 !important;
}

.djs-palette .entry,
.djs-palette .djs-palette-toggle {
  width: 30px;
  height: 30px;
  line-height: 30px;
  cursor: default;
}

/**
 * Palette open / two-column layout is controlled via
 * classes on the palette. Events to hook into palette
 * changed life-cycle are available in addition.
 */
.djs-palette.two-column.open {
  width: 64px;
}

.djs-palette:not(.open) .djs-palette-entries {
  display: none;
}

.djs-palette:not(.open) {
  overflow: hidden;
}

.djs-palette.open .djs-palette-toggle {
  display: none;
}

/**
 * outline styles
 */

.djs-outline {
  fill: none;
  visibility: hidden;
}

.djs-element.hover .djs-outline,
.djs-element.selected .djs-outline {
  visibility: visible;
  shape-rendering: crispEdges;
  stroke-dasharray: 3, 3;
}

.djs-element.hover .djs-outline {
  stroke: #a4d7e1;
}

.djs-element.attach-ok .djs-visual > :nth-child(1) {
  stroke: #a4d7e1 !important;
}

/**
* Selection box style
*
*/
.djs-lasso-overlay {
  stroke: #a4d7e1;
}

/**
 * Resize styles
 */
.djs-resize-overlay {
  stroke: #a4d7e1;
}

/**
 * drag styles
 */
.djs-dragger .djs-visual circle,
.djs-dragger .djs-visual path,
.djs-dragger .djs-visual polygon,
.djs-dragger .djs-visual polyline,
.djs-dragger .djs-visual rect,
.djs-dragger .djs-visual text {
  fill: none !important;
  stroke: #a4d7e1 !important;
}

/**
 * snapping
 */
.djs-snap-line {
  stroke: #e1aea4;
}

.djs-palette .entry:hover {
  color: #a4d7e1;
}

.djs-palette .highlighted-entry {
  color: #a4d7e1 !important;
}

.djs-context-pad .entry:hover {
  background: #a4d7e1;
}

.djs-popup .djs-popup-header .entry.active {
  color: #a4d7e1;
  border: solid 1px #a4d7e1;
  background-color: #f7f7f8;
}

.djs-popup-body .entry {
  width: auto !important;
}

.djs-segment-dragger:hover .djs-visual,
.djs-segment-dragger.djs-dragging .djs-visual,
.djs-bendpoint:hover .djs-visual,
.djs-bendpoint.floating .djs-visual,
.djs-bendpoint.bendpoint-dragging .djs-visual {
  fill: #a4d7e1;
  stroke-opacity: 0.5;
  stroke: black;
}

g.djs-bendpoint.djs-dragging.bendpoint-dragging,
g.djs-bendpoint.djs-dragging.bendpoint-dragging > * {
  display: block;
  opacity: 1 !important;
}

.djs-segment-dragger.djs-dragging .djs-visual,
.djs-bendpoint.djs-dragging .djs-visual {
  fill: #a4d7e1;
}

.djs-tooltip-error > * {
  color: #a4d7e1;
  border-left: solid 5px #a4d7e1;
}

/** Minimap Module **/

.djs-minimap {
  position: absolute;
  bottom: 46px;
  right: 4px;
  overflow: hidden;
  background-color: #f7f7f8;
  border: solid 1px #b9bcc6;
  border-radius: 2px;
  box-sizing: border-box;
  user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
}

.djs-minimap:not(.open) {
  overflow: hidden;
}

.djs-minimap .map {
  display: none;
}

.djs-minimap.open .map {
  display: block;
}

.djs-minimap .map {
  width: 320px;
  height: 180px;
}

.djs-minimap:not(.open) .toggle {
  padding: 10px;
  text-align: center;
}

.djs-minimap .toggle:before {
  content: "Show map";
}

.djs-minimap.open .toggle:before {
  content: "Hide map";
}

.djs-minimap.open .toggle {
  position: absolute;
  right: 0;
  padding: 6px;
  z-index: 1;
}

.djs-minimap .map {
  cursor: crosshair;
}

.djs-minimap .viewport {
  fill: none;
  stroke: none;
}

.djs-minimap .viewport-dom {
  position: absolute;
  border: solid 2px #0093ac;
  border-radius: 2px;
  box-sizing: border-box;
  cursor: move;
}

.djs-minimap:not(.open) .viewport-dom {
  display: none;
}

.djs-minimap.open .overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(255, 255, 255, 0.2);
  pointer-events: none;
}

.djs-minimap .cursor-crosshair {
  cursor: crosshair;
}

.djs-minimap .cursor-move {
  cursor: move;
}

/** Autocomplete **/

.autocomplete-items {
  border: 1px solid #b9bcc6;
  background-color: #f7f7f8;
}

.autocomplete-active {
  background-color: #a4d7e1 !important;
}
